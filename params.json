{"name":"Git-cheatsheet","tagline":"This is a compilation of common git commands. It is to keep them all handy at one place.","body":"#git Cheat Sheet\r\n\r\n###always pull from the same\r\n    git config branch.master.remote origin\r\n    git config branch.master.merge refs/heads/master\r\n\r\n###Start from existing code (-u is to always push to the same)\r\n\r\n    git remote add origin git@github.com:trufa/test.git\r\n    git push -u origin master \r\n\r\n###Use [kdiff3](http://kdiff3.sourceforge.net/) as mergetool to solve conflicts\r\n\r\n(paste this inside of your .git/config file)\r\n\r\n    [merge]\r\n        tool = kdiff3\r\n    \r\n    [mergetool \"kdiff3\"]\r\n        path = C:/Program Files/KDiff3/kdiff3.exe\r\n        keepBackup = false\r\n        trustExitCode = false\r\n        \r\n###Four ways of undoing last n commits\r\n\r\n[Read explanation here!](http://stackoverflow.com/a/6866485/463065)\r\n\r\nYou want to nuke commit your and never see it again (Careful! Permanent loss).\r\n    \r\n    git reset --hard HEAD~n\r\n    \r\nYou want to undo the commit but keep your changes\r\n    \r\n    git reset HEAD~n\r\n    \r\nUndo your commit but leave your files and your index:\r\n\r\n    git reset --soft HEAD~n\r\n    \r\nIf you only want to change the last commit message\r\n\r\n    git commit --amend -m \"New commit message\"\r\n\r\n###Basic branching [(tutorial)](http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging)\r\n\r\nCheckout to a new branch\r\n\r\n    git checkout -b newBranchName\r\n    \r\nGo back and merge\r\n\r\n    git checkout master\r\n    git merge newBranchName\r\n    \r\n###Revert uncommited file to last version\r\n\r\n    git checkout filename\r\n    \r\n###Set vimdiff as default difftool [(source)](http://stackoverflow.com/a/3713865/463065)\r\n\r\n    git config --global diff.tool vimdiff\r\n    git config --global difftool.prompt false\r\n    git config --global alias.d difftool\r\n\r\n###Stash local changes to be able to pull without errors [(source)](http://stackoverflow.com/a/14318266/463065)\r\n\r\n    git stash save --keep-index\r\n    \r\n###Check if there is anything to pull, bring remote up to date [(source)](http://stackoverflow.com/a/3278427/463065)\r\n\r\n    git remote update\r\n    \r\n###Know what you pulled [(source)](http://stackoverflow.com/a/1362990/463065)\r\n\r\n    git diff master master@{1}\r\n    \r\n###Checkout to a remote branch\r\n\r\n    git checkout -b abranch origin/abranch\r\n\r\n###Move uncommitted changes to a new branch [(source)](http://stackoverflow.com/a/1394804/463065)\r\n\r\n    git checkout -b <new-branch>\r\n    git add <files>\r\n    git commit\r\n    \r\n###Move uncommitted changes to existing branch [(source)](http://stackoverflow.com/a/556986/463065)\r\n\r\n    git stash\r\n    git checkout branch2\r\n    git stash pop\r\n\r\n###Get commits by certain user [(source)](http://stackoverflow.com/a/2954501/463065):\r\n\r\n    git log --author=<pattern>\r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}